blogdown:::opts$set(config = config)
blogdown:::opts
check_config(config, f)
blogdown:::check_config(config, f)
config
blogdown:::check_config
base = config[["baseurl"]]
(is_example_url(base))
(blogdown:::is_example_url(base))
ignore = c("\\.Rmd$", "\\.Rmarkdown$", "_cache$",
"\\.knit\\.md$", "\\.utf8\\.md$")
(is.null(s <- config[["ignoreFiles"]]))
(!all(ignore %in% s))
s
ignore
blogdown::stop_server()
blogdown::serve_site()
config = parser(f)
config
(is.null(s <- config[["ignoreFiles"]]))
(!all(ignore %in% s))
f
s
ignore
config = parser(f)
config = parser(f)
blogdown::stop_server()
config = parser(f)
config = parser(f)
(s <- config[["ignoreFiles"]])
ignore
config = parser(f)
s <- config[["ignoreFiles"]]
s
ignore
config = parser(f)
(s <- config[["ignoreFiles"]])
config = parser(f)
config = parser(f)
s <- config[["ignoreFiles"]])
(s <- config[["ignoreFiles"]])
setdiff(ignore, s)
ignore
all(ignore %in% s)
ignore %in% s
config = parser(f)
attr(config, "config_time") = m
config = parser(f)
config$ignoreFiles
install.packages("blogdown")
blogdown:::preview_site(startup = TRUE)
install.packages("blogdown")
blogdown:::preview_site(startup = TRUE)
install.packages("blogdown")
blogdown:::preview_site(startup = TRUE)
install.packages("blogdown")
install.packages("blogdown")
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::stop_server()
blogdown::build_site()
blogdown::build_site?
s
?blogdown::build_site
?git2r
x <- "hello [world] [are] [you 2] [30] [?]"
library(string)
library(stringr)
str_extract_all("\[.*?\]")
str_extract_all(r"(\[.*?\])")
str_extract_all(x,r"(\[.*?\])")
x <- "hello [world] [are] [you 2] [30] [?] []"
str_extract_all(x,r"(\[.*?\])")
str_extract_all(x,r"(\[.+?\])")
str_extract_all(x,r"(\[(.+)?\])")
str_extract_all(x,r"(\[(.+?)\])")
str_extract_all(x,r"(\[(a-zA-Z+?)\])")
str_extract_all(x,r"(\[([a-zA-Z]+?)\])")
str_extract_all(x,r"(\[([a-zA-Z]+[\s\d]*?)\])")
str_extract_all(x,r"((?=\[)([a-zA-Z]+[\s\d]*?)\])")
str_extract_all(x,r"((?<=\[)([a-zA-Z]+[\s\d]*?)\])")
str_extract_all(x,r"((?<=\[)([a-zA-Z]+[\s\d]*?)(?=\]))")
str_replace_all(x,r"((?<=\[)([a-zA-Z]+[\s\d]*?)(?=\]))","\\1")
str_replace_all(x,r"((?<=\[)([a-zA-Z]+[\s\d]*?)(?=\]))","{\\1}")
str_replace_all(x,r"((\[)([a-zA-Z]+[\s\d]*?)(\]))","\\1")
str_replace_all(x,r"((\[)([a-zA-Z]+[\s\d]*?)(\]))","{\\2}")
str_replace_all(x,r"((\[)([\p{L}]+[\s\d]*?)(\]))","{\\2}")
x <- "hello [world] [are] [café] [you 2] [30] [?] []"
str_extract_all(x,r"((?<=\[)([a-zA-Z]+[\s\d]*?)(?=\]))")
str_replace_all(x,r"((\[)([\p{L}]+[\s\d]*?)(\]))","{\\2}")
x <- "hello [are] [you in] [a] [café] [?] [Me 2] [!] What did you order? [32] Cakes"
str_extract_all(x,r"((?<=\[)([a-zA-Z]+[\s\d]*?)(?=\]))")
str_replace_all(x,r"((\[)([\p{L}]+[\s\d]*?)(\]))","{\\2}")
str_extract_all(x,r"((?<=\[)([[a-zA-Z]+[\s\d]*]?)(?=\]))")
str_extract_all(x,r"((?<=\[)([[a-zA-Z]+[\s\d]*]*?)(?=\]))")
str_replace_all(x,r"((\[)([\p{L}]+[\s\d]*?)(\]))","{\\2}")
str_replace_all(x,r"((\[)([[\p{L}]+[\s\d]*]?)(\]))","{\\2}")
str_extract_all(x,r"((?<=\[)([[a-zA-Z]+[\s\d]*]*?)(?=\]))")
str_extract_all(x,r"((?<=\[)([a-zA-Z]+[\s\d]*?)(?=\]))")
str_extract_all(x,r"((?<=\[)([a-zA-Z]+?)(?=\]))")
str_extract_all(x,r"((?<=\[)(.*?)([a-zA-Z]+?)(.*?)(?=\]))")
str_extract_all(x,r"((?<=\[)([a-zA-Z]+?)(?=\]))")
str_replace_all(x,r"((\[)([\p{L}]+[\s\d]*?)(\]))","{\\2}")
str_replace_all(x,r"((\[)([\p{L}\s]+[\s\d]*?)(\]))","{\\2}")
x <- "hello [are] [you in] [a] [café] [?] [Me 2] [!] What did you order? [32] Cakes all [4 me]"
str_extract_all(x,r"((?<=\[)([a-zA-Z]+?)(?=\]))")
str_replace_all(x,r"((\[)([\p{L}\s]+[\s\d]*?)(\]))","{\\2}")
str_replace_all(x,r"((\[)([\p{L}\s]+[\d]*?)(\]))","{\\2}")
str_replace_all(x,r"((\[)([[\p{L}\s]+[\d]*]?)(\]))","{\\2}")
blogdown:::preview_site(startup = TRUE)
?blogdown::new_post
blogdown::new_post("The new base pipe!",ext=".Rmd")
...elt
?...elt
blogdown:::preview_site()
1:10 %>%
~mean(.)
`%>%` <- magrittr::`%>%`
1:10 %>%
~mean(.)
1:10 %>%
as_mapper(~mean(.))
`%in%`
`%%`
`%in%`
knitr::opts_chunk$set(echo = TRUE)
1:10 %in% 1:5
options(blogdown.knit.on_save = TRUE)
blogdown:::preview_site()
blogdown:::preview_site()
print.to <- function(x,...){
cat("An object running from ",x$from," to ",x$to)
}
`%to%` <- function(a,b){
structure(to = a,from = b,class="to")
}
5 %to% 10
print.to <- function(x,...){
cat("An object running from ",x$from," to ",x$to)
}
`%to%` <- function(a,b){
structure(list(to = a,from = b),class="to")
}
5 %to% 10
print.to <- function(x,...){
cat("An object running from ",x$from," to ",x$to)
}
`%to%` <- function(a,b){
structure(list(from = a,to = b),class="to")
}
5 %to% 10
`%to%` <- function(a,b){
cat("Interval from ",a," to ",b,"\n")
}
5 %to% 10
lubridate interval
?lubridate
glue::`%+%`
glue:::`%+%`
?`%+%`
`%+%` <- function(a,b){
paste(a,b)
}
"hello" %+% "world"
x %>%
{doubler(.)}
2*x
x <- 1:10
x %>%
{doubler(.)}
doubler <- function(x){
2*x
}
x %>%
{doubler(.)}
remotes::install("C:\Users\mbrxsmbc\Downloads\magrittr_1.0.0.tar.gz")
remotes::install(r"(C:\Users\mbrxsmbc\Downloads\magrittr_1.0.0.tar.gz)")
remotes::install_local(r"(C:\Users\mbrxsmbc\Downloads\magrittr_1.0.0.tar.gz)")
blogdown:::preview_site(startup = TRUE)
remotes::local(r"(C:\Users\mbrxsmbc\Downloads\magrittr_1.0.0.tar.gz)")
remotes::install_local(r"(C:\Users\mbrxsmbc\Downloads\magrittr_1.0.0.tar.gz)")
?remotes::install_local(r"(C:\Users\mbrxsmbc\Downloads\magrittr_1.0.0.tar.gz)")
?remotes::install_local(r"(C:\Users\mbrxsmbc\Downloads\magrittr_1.0.0.tar.gz)",lock=F)
remotes::install_local(r"(C:\Users\mbrxsmbc\Downloads\magrittr_1.0.0.tar.gz)",lock=F)
?install.packages
install.packages(r"(C:\Users\mbrxsmbc\Downloads\magrittr_1.0.0.tar.gz)",repos=NULL,type="source")
install.packages(r"(C:\Users\mbrxsmbc\Downloads\magrittr_1.0.0.tar.gz)",repos=NULL,type="source",lock=F)
`%>>%` <-
deparse(`%>%`) %>%
gsub("([^[:alpha:]])\\.", "\\1..", .) %>%
parse(text = .) %>%
eval
library(magrittr)
`%>>%` <-
deparse(`%>%`) %>%
gsub("([^[:alpha:]])\\.", "\\1..", .) %>%
parse(text = .) %>%
eval
`%>>%`
deparse(`%>%`)
`%>%` <-
function(e1, e2)
{
cl <- match.call()
if (length(cl[[3]]) == 1) {
# Function reference without parentheses.
e2(e1)
} else {
# Alter the right-hand side before evaluation.
e  <- do.call(substitute, list(cl[[3]], list(. = cl[[2]])))
if (e == cl[[3]]) {
# No dot was found - so squeeze in as first argument.
j <- length(e)
while (j > 1) {
e[[j + 1]] <- e[[j]]
if (!is.null(names(e)))
# Make names (if present) follow values.
names(e)[[j + 1]] <- names(e)[[j]]
j <- j - 1
}
# place a dot, and try again.
e[[2]] <- as.name(".")
if (!is.null(names(e)))
names(e)[[2]] <- ""
e <- do.call(substitute, list(e, list(. = cl[[2]])))
}
# Evaluate the call.
eval(e, parent.frame(), parent.frame())
}
}
`%>>%` <-
deparse(`%>%`) %>%
gsub("([^[:alpha:]])\\.", "\\1..", .) %>%
parse(text = .) %>%
eval
`%>>%`
knitr::opts_chunk$set(echo = TRUE)
install.packages("magrittr")
install.packages("magrittr")
remotes::install_github("Myko101/magrittrclassic")
remotes::install_github("Myko101/magrittrclassic@classic")
remotes::install_github("Myko101/magrittrclassic@classic")
remotes::install_github("Myko101/magrittrclassic")
library(magrittrclassic)
library(magrittr)
library(magrttrclassic)
library(magrittrclassic)
doubler <- function(val) 2*val
x <- 1:10
bench::mark(
standard = doubler(x),
magrittrclassic = x %>>% doubler(),
magrittr = x %>% doubler(),
base = x |> doubler()
)
x |> doubler()
bench::mark(
standard = doubler(x),
magrittrclassic = x %>>% doubler(),
magrittr = x %>% doubler(),
base = x |> doubler()
)
doubler(x)
x %>>% doubler()
`%>>%`
library(magrittrclassic)
rm(`%>>%`)
x %>>% doubler()
doubler <- function(val) 2*val
x <- 1:10
bench::mark(
standard = doubler(x),
magrittrclassic = x %>>% doubler(),
magrittr = x %>% doubler(),
base = x |> doubler()
)
x %>% doubler()
x %>>% doubler()
x %>% doubler()
rm(`%>%`)
x %>% doubler()
doubler <- function(val) 2*val
x <- 1:10
bench::mark(
standard = doubler(x),
magrittrclassic = x %>>% doubler(),
magrittr = x %>% doubler(),
base = x |> doubler()
)
ggplot2::autoplot(.Last.value)
ggplot2::autoplot(.Last.value)
doubler <- function(val) 2*val
x <- 1:10
bench::mark(
standard = doubler(x),
magrittrclassic = x %>>% doubler(),
magrittr = x %>% doubler(),
base = x |> doubler()
)
ggplot2::autoplot(.Last.value)
doubler <- function(val) 2*val
x <- 1:10
bm <- bench::mark(
standard = doubler(x),
magrittrclassic = x %>>% doubler(),
magrittr = x %>% doubler(),
base = x |> doubler()
)
bm
ggplot2::autoplot(bm)
'hello'
"hello"
rlang::exprs(
standard = doubler(x),
magrittrclassic = x %>>% doubler(),
magrittr = x %>% doubler(),
base = x |> doubler()
)
bm2 <- bench::mark(
standard = 2*x,
magrittrclassic = x %>>% {2*.},
magrittr = x %>% {2*.},
base = x |> \(y) 2*y
)
bm
bm2 <- bench::mark(
standard = 2*x,
magrittrclassic = x %>>% {2*.},
magrittr = x %>% {2*.},
base = x |> \(y) 2*y
)
bm2
bm2 <- bench::mark(
standard = 2*x,
magrittrclassic = x %>>% {2*.},
magrittr = x %>% {2*.},
base = x |> \(y) 2*y
)
bm2
ggplot2::autoplot(bm2)
bm2 <- bench::mark(
standard = (function(y) 2*y)(x)
magrittrclassic = x %>>% {2*.},
bm2 <- bench::mark(
standard = (function(y) 2*y)(x),
magrittrclassic = x %>>% {2*.},
magrittr = x %>% {2*.},
base = x |> \(y) 2*y
)
bm2
ggplot2::autoplot(bm2)
rlang::exprs(
standard = (function(y) 2*y)(x),
magrittrclassic = x %>>% {2*.},
magrittr = x %>% {2*.},
base = x |> \(y) 2*y
)
multiplier <- function(a,val) a*val
bm3 <- bench::mark(
standard = multiplier(2,x),
magrittrclassic = x %>>% multiplier(2,.),
magrittr = x %>% multiplier(2,.),
base_lambda = x |> \(y) multiplier(2,y),
base_named = x |> multilier(a=2)
)
multiplier <- function(a,val) a*val
bm3 <- bench::mark(
standard = multiplier(2,x),
magrittrclassic = x %>>% multiplier(2,.),
magrittr = x %>% multiplier(2,.),
base_lambda = x |> \(y) multiplier(2,y),
base_named = x |> multiplier(a=2)
)
bm3
multiplier <- function(a,val) a*val
bm3 <- bench::mark(
standard = multiplier(2,x),
magrittrclassic = x %>>% multiplier(2,.),
magrittr = x %>% multiplier(2,.),
base_lambda = x |> \(y) multiplier(2,y),
base_named = x |> multiplier(a=2)
)
bm3
autoplot(bm3)
multiplier <- function(a,val) a*val
bm3 <- bench::mark(
standard = multiplier(2,x),
magrittrclassic = x %>>% multiplier(2,.),
magrittr = x %>% multiplier(2,.),
base_lambda = x |> \(y) multiplier(2,y),
base_named = x |> multiplier(a=2)
)
bm3
ggplot2::autoplot(bm3)
rlang::exprs(
standard = multiplier(2,x),
magrittrclassic = x %>>% multiplier(2,.),
magrittr = x %>% multiplier(2,.),
base_lambda = x |> \(y) multiplier(2,y),
base_named = x |> multiplier(a=2)
)
x %>>% doubler()
blogdown:::preview_site()
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
doubler <- function(val) 2*val
x <- 1:10
bm <- bench::mark(
standard = doubler(x),
magrittrclassic = x %>>% doubler(),
magrittr = x %>% doubler(),
base = x |> doubler()
)
ggplot2::autoplot(bm)
library(purrr)
?library
library(purrr,warn.conflicts=F)
bench::mark(
standard = for(i in 1:10)
)
res <- vector("numeric",10)
for(i in 1:10) {
res[[i]] <- mean(1:i)
}
res
lapply(1:10,function(i) mean(1:i))
library(purrr,warn.conflicts=F)
bench::mark(
standard = lapply(1:10,function(i) mean(1:i)),
purrr = map(1:10,~mean(1:.)),
base = lapply(1:10,\(i) mean(1:i))
)
library(purrr,warn.conflicts=F)
bench::mark(
standard = {
res <- vector("list",10)
for(i in 1:10) res[[i]] <- mean(1:i)
res
}
purrr = map(1:10,~mean(1:.)),
library(purrr,warn.conflicts=F)
bench::mark(
standard = {
res <- vector("list",10)
for(i in 1:10) res[[i]] <- mean(1:i)
res
},
purrr = map(1:10,~mean(1:.)),
base = lapply(1:10,\(i) mean(1:i))
)
library(purrr,warn.conflicts=F)
bm4 <- bench::mark(
standard = {
res <- vector("list",10)
for(i in 1:10) res[[i]] <- mean(1:i)
res
},
purrr = map(1:10,~mean(1:.)),
base = lapply(1:10,\(i) mean(1:i))
)
autoplot(bm4)
library(purrr,warn.conflicts=F)
bm4 <- bench::mark(
standard = {
res <- vector("list",10)
for(i in 1:10) res[[i]] <- mean(1:i)
res
},
purrr = map(1:10,~mean(1:.)),
base = lapply(1:10,\(i) mean(1:i))
)
ggplot2:autoplot(bm4)
library(purrr,warn.conflicts=F)
bm4 <- bench::mark(
standard = {
res <- vector("list",10)
for(i in 1:10) res[[i]] <- mean(1:i)
res
},
purrr = map(1:10,~mean(1:.)),
base = lapply(1:10,\(i) mean(1:i))
)
ggplot2::autoplot(bm4)
?lapply
blogdown:::preview_site()
my_function <- function(){
#this function won't do much
#It will demonstrate output
TRUE
}
my_function
my_function <- function(){
#this function won't do much
#It will demonstrate output
TRUE
}
my_function
multiplier <- function(a,val) a*val
bm3 <- bench::mark(
standard = multiplier(2,x),
magrittrclassic = x %>>% multiplier(2,.),
magrittr = x %>% multiplier(2,.),
base_lambda = x |> \(y) multiplier(2,y),
base_named = x |> multiplier(a=2)
)
ggplot2::autoplot(bm3)
blogdown::build_site()
