remotes::install_local(r"(C:\Users\mbrxsmbc\Downloads\magrittr_1.0.0.tar.gz)")
?remotes::install_local(r"(C:\Users\mbrxsmbc\Downloads\magrittr_1.0.0.tar.gz)")
?remotes::install_local(r"(C:\Users\mbrxsmbc\Downloads\magrittr_1.0.0.tar.gz)",lock=F)
remotes::install_local(r"(C:\Users\mbrxsmbc\Downloads\magrittr_1.0.0.tar.gz)",lock=F)
?install.packages
install.packages(r"(C:\Users\mbrxsmbc\Downloads\magrittr_1.0.0.tar.gz)",repos=NULL,type="source")
install.packages(r"(C:\Users\mbrxsmbc\Downloads\magrittr_1.0.0.tar.gz)",repos=NULL,type="source",lock=F)
`%>>%` <-
deparse(`%>%`) %>%
gsub("([^[:alpha:]])\\.", "\\1..", .) %>%
parse(text = .) %>%
eval
library(magrittr)
`%>>%` <-
deparse(`%>%`) %>%
gsub("([^[:alpha:]])\\.", "\\1..", .) %>%
parse(text = .) %>%
eval
`%>>%`
deparse(`%>%`)
`%>%` <-
function(e1, e2)
{
cl <- match.call()
if (length(cl[[3]]) == 1) {
# Function reference without parentheses.
e2(e1)
} else {
# Alter the right-hand side before evaluation.
e  <- do.call(substitute, list(cl[[3]], list(. = cl[[2]])))
if (e == cl[[3]]) {
# No dot was found - so squeeze in as first argument.
j <- length(e)
while (j > 1) {
e[[j + 1]] <- e[[j]]
if (!is.null(names(e)))
# Make names (if present) follow values.
names(e)[[j + 1]] <- names(e)[[j]]
j <- j - 1
}
# place a dot, and try again.
e[[2]] <- as.name(".")
if (!is.null(names(e)))
names(e)[[2]] <- ""
e <- do.call(substitute, list(e, list(. = cl[[2]])))
}
# Evaluate the call.
eval(e, parent.frame(), parent.frame())
}
}
`%>>%` <-
deparse(`%>%`) %>%
gsub("([^[:alpha:]])\\.", "\\1..", .) %>%
parse(text = .) %>%
eval
`%>>%`
knitr::opts_chunk$set(echo = TRUE)
install.packages("magrittr")
install.packages("magrittr")
remotes::install_github("Myko101/magrittrclassic")
remotes::install_github("Myko101/magrittrclassic@classic")
remotes::install_github("Myko101/magrittrclassic@classic")
remotes::install_github("Myko101/magrittrclassic")
library(magrittrclassic)
library(magrittr)
library(magrttrclassic)
library(magrittrclassic)
doubler <- function(val) 2*val
x <- 1:10
bench::mark(
standard = doubler(x),
magrittrclassic = x %>>% doubler(),
magrittr = x %>% doubler(),
base = x |> doubler()
)
x |> doubler()
bench::mark(
standard = doubler(x),
magrittrclassic = x %>>% doubler(),
magrittr = x %>% doubler(),
base = x |> doubler()
)
doubler(x)
x %>>% doubler()
`%>>%`
library(magrittrclassic)
rm(`%>>%`)
x %>>% doubler()
doubler <- function(val) 2*val
x <- 1:10
bench::mark(
standard = doubler(x),
magrittrclassic = x %>>% doubler(),
magrittr = x %>% doubler(),
base = x |> doubler()
)
x %>% doubler()
x %>>% doubler()
x %>% doubler()
rm(`%>%`)
x %>% doubler()
doubler <- function(val) 2*val
x <- 1:10
bench::mark(
standard = doubler(x),
magrittrclassic = x %>>% doubler(),
magrittr = x %>% doubler(),
base = x |> doubler()
)
ggplot2::autoplot(.Last.value)
ggplot2::autoplot(.Last.value)
doubler <- function(val) 2*val
x <- 1:10
bench::mark(
standard = doubler(x),
magrittrclassic = x %>>% doubler(),
magrittr = x %>% doubler(),
base = x |> doubler()
)
ggplot2::autoplot(.Last.value)
doubler <- function(val) 2*val
x <- 1:10
bm <- bench::mark(
standard = doubler(x),
magrittrclassic = x %>>% doubler(),
magrittr = x %>% doubler(),
base = x |> doubler()
)
bm
ggplot2::autoplot(bm)
'hello'
"hello"
rlang::exprs(
standard = doubler(x),
magrittrclassic = x %>>% doubler(),
magrittr = x %>% doubler(),
base = x |> doubler()
)
bm2 <- bench::mark(
standard = 2*x,
magrittrclassic = x %>>% {2*.},
magrittr = x %>% {2*.},
base = x |> \(y) 2*y
)
bm
bm2 <- bench::mark(
standard = 2*x,
magrittrclassic = x %>>% {2*.},
magrittr = x %>% {2*.},
base = x |> \(y) 2*y
)
bm2
bm2 <- bench::mark(
standard = 2*x,
magrittrclassic = x %>>% {2*.},
magrittr = x %>% {2*.},
base = x |> \(y) 2*y
)
bm2
ggplot2::autoplot(bm2)
bm2 <- bench::mark(
standard = (function(y) 2*y)(x)
magrittrclassic = x %>>% {2*.},
bm2 <- bench::mark(
standard = (function(y) 2*y)(x),
magrittrclassic = x %>>% {2*.},
magrittr = x %>% {2*.},
base = x |> \(y) 2*y
)
bm2
ggplot2::autoplot(bm2)
rlang::exprs(
standard = (function(y) 2*y)(x),
magrittrclassic = x %>>% {2*.},
magrittr = x %>% {2*.},
base = x |> \(y) 2*y
)
multiplier <- function(a,val) a*val
bm3 <- bench::mark(
standard = multiplier(2,x),
magrittrclassic = x %>>% multiplier(2,.),
magrittr = x %>% multiplier(2,.),
base_lambda = x |> \(y) multiplier(2,y),
base_named = x |> multilier(a=2)
)
multiplier <- function(a,val) a*val
bm3 <- bench::mark(
standard = multiplier(2,x),
magrittrclassic = x %>>% multiplier(2,.),
magrittr = x %>% multiplier(2,.),
base_lambda = x |> \(y) multiplier(2,y),
base_named = x |> multiplier(a=2)
)
bm3
multiplier <- function(a,val) a*val
bm3 <- bench::mark(
standard = multiplier(2,x),
magrittrclassic = x %>>% multiplier(2,.),
magrittr = x %>% multiplier(2,.),
base_lambda = x |> \(y) multiplier(2,y),
base_named = x |> multiplier(a=2)
)
bm3
autoplot(bm3)
multiplier <- function(a,val) a*val
bm3 <- bench::mark(
standard = multiplier(2,x),
magrittrclassic = x %>>% multiplier(2,.),
magrittr = x %>% multiplier(2,.),
base_lambda = x |> \(y) multiplier(2,y),
base_named = x |> multiplier(a=2)
)
bm3
ggplot2::autoplot(bm3)
rlang::exprs(
standard = multiplier(2,x),
magrittrclassic = x %>>% multiplier(2,.),
magrittr = x %>% multiplier(2,.),
base_lambda = x |> \(y) multiplier(2,y),
base_named = x |> multiplier(a=2)
)
x %>>% doubler()
blogdown:::preview_site()
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
doubler <- function(val) 2*val
x <- 1:10
bm <- bench::mark(
standard = doubler(x),
magrittrclassic = x %>>% doubler(),
magrittr = x %>% doubler(),
base = x |> doubler()
)
ggplot2::autoplot(bm)
library(purrr)
?library
library(purrr,warn.conflicts=F)
bench::mark(
standard = for(i in 1:10)
)
res <- vector("numeric",10)
for(i in 1:10) {
res[[i]] <- mean(1:i)
}
res
lapply(1:10,function(i) mean(1:i))
library(purrr,warn.conflicts=F)
bench::mark(
standard = lapply(1:10,function(i) mean(1:i)),
purrr = map(1:10,~mean(1:.)),
base = lapply(1:10,\(i) mean(1:i))
)
library(purrr,warn.conflicts=F)
bench::mark(
standard = {
res <- vector("list",10)
for(i in 1:10) res[[i]] <- mean(1:i)
res
}
purrr = map(1:10,~mean(1:.)),
library(purrr,warn.conflicts=F)
bench::mark(
standard = {
res <- vector("list",10)
for(i in 1:10) res[[i]] <- mean(1:i)
res
},
purrr = map(1:10,~mean(1:.)),
base = lapply(1:10,\(i) mean(1:i))
)
library(purrr,warn.conflicts=F)
bm4 <- bench::mark(
standard = {
res <- vector("list",10)
for(i in 1:10) res[[i]] <- mean(1:i)
res
},
purrr = map(1:10,~mean(1:.)),
base = lapply(1:10,\(i) mean(1:i))
)
autoplot(bm4)
library(purrr,warn.conflicts=F)
bm4 <- bench::mark(
standard = {
res <- vector("list",10)
for(i in 1:10) res[[i]] <- mean(1:i)
res
},
purrr = map(1:10,~mean(1:.)),
base = lapply(1:10,\(i) mean(1:i))
)
ggplot2:autoplot(bm4)
library(purrr,warn.conflicts=F)
bm4 <- bench::mark(
standard = {
res <- vector("list",10)
for(i in 1:10) res[[i]] <- mean(1:i)
res
},
purrr = map(1:10,~mean(1:.)),
base = lapply(1:10,\(i) mean(1:i))
)
ggplot2::autoplot(bm4)
?lapply
blogdown:::preview_site()
my_function <- function(){
#this function won't do much
#It will demonstrate output
TRUE
}
my_function
my_function <- function(){
#this function won't do much
#It will demonstrate output
TRUE
}
my_function
multiplier <- function(a,val) a*val
bm3 <- bench::mark(
standard = multiplier(2,x),
magrittrclassic = x %>>% multiplier(2,.),
magrittr = x %>% multiplier(2,.),
base_lambda = x |> \(y) multiplier(2,y),
base_named = x |> multiplier(a=2)
)
ggplot2::autoplot(bm3)
blogdown::build_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
build_site()
blogdown::build_site()
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
bm3 <- bench::mark(
standard = multiplier(2,x),
magrittrclassic = x %>>% multiplier(2,.),
magrittr = x %>% multiplier(2,.),
base_lambda = x |> \(y) multiplier(2,y),
base_named = x |> multiplier(a=2)
)
multiplier <- function(a,val) a*val
bm3 <- bench::mark(
standard = multiplier(2,x),
magrittrclassic = x %>>% multiplier(2,.),
magrittr = x %>% multiplier(2,.),
base_lambda = x |> \(y) multiplier(2,y),
base_named = x |> multiplier(a=2)
)
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
library(magrittr)
library(magrittrclassic)
doubler <- function(val) 2*val
x <- 1:10
bm <- bench::mark(
standard = doubler(x),
magrittrclassic = x %>>% doubler(),
magrittr = x %>% doubler(),
base = x |> doubler()
)
ggplot2::autoplot(bm)
rlang::exprs(
standard = doubler(x),
magrittrclassic = x %>>% doubler(),
magrittr = x %>% doubler(),
base = x |> doubler()
)
bm2 <- bench::mark(
standard = (function(y) 2*y)(x),
magrittrclassic = x %>>% {2*.},
magrittr = x %>% {2*.},
base = x |> \(y) 2*y
)
ggplot2::autoplot(bm2)
rlang::exprs(
standard = (function(y) 2*y)(x),
magrittrclassic = x %>>% {2*.},
magrittr = x %>% {2*.},
base = x |> \(y) 2*y
)
multiplier <- function(a,val) a*val
bm3 <- bench::mark(
standard = multiplier(2,x),
magrittrclassic = x %>>% multiplier(2,.),
magrittr = x %>% multiplier(2,.),
base_lambda = x |> \(y) multiplier(2,y),
base_named = x |> multiplier(a=2)
)
ggplot2::autoplot(bm3)
bm3 <- bench::mark(
standard = multiplier(2,x),
magrittrclassic = x %>>% multiplier(2,.),
magrittr = x %>% multiplier(2,.),
base_named = x |> multiplier(a=2),
base_lambda = x |> \(y) multiplier(2,y)
)
bm3 <- bench::mark(
standard = multiplier(2,x),
magrittrclassic = x %>>% multiplier(2,.),
magrittr = x %>% multiplier(2,.),
base_named = x |> multiplier(a=2),
base_lambda = x |> \(y) multiplier(2,y)
)
ggplot2::autoplot(bm3)
parse(text="x |> doubler()")
eval(parse(text="x |> doubler()"))
{2*.}(10)
\(x) x+1
f <- \(x) x+1
f(x)
map2(1:10,10:1,\(x,y) x*y)
purrr::map2(1:10,10:1,\(x,y) x*y)
purrr::map2(1:10,10:1,~.x*.y)
mapply
x
y <- x+1
list(x,y) |> \(l) l$x*l$y
y <- x+1
list(x,y)
list(x=x,y=y) |> \(l) l$x*l$y
list(x=x,y=y) |> \(x,y) x*y
list(x=x,y=y) %>% {.$x*.$y}
var1 <- 1:10
var2 <- 10:1
{
res <- vector("list",length(var1))
for(i in length(var1)){
res[[i]] <- var1[[i]]*var2[[i]]
}
res
}
{
res <- vector("list",length(var1))
for(i in 1:length(var1)){
res[[i]] <- var1[[i]]*var2[[i]]
}
res
}
map2(var1,var2,~.x*.y)
library(purrr)
map2(var1,var2,~.x*.y)
?list
mapply(\(x,y) x*y, var1,var2)
list(x=var1,y=var2) |> \(a) a$x*a$y
list(x=var1,y=var2) %>% {.$x*.$y}
map2(var1,var2,~.x*.y)
bm5 <- bench::mark(
standard = {
res <- vector("numeric",length(var1))
for(i in 1:length(var1)){
res[[i]] <- var1[[i]]*var2[[i]]
}
res
},
purrr = map2_dbl(var1,var2,~.x*.y),
magrittr = list(x=var1,y=var2) %>% {.$x*.$y},
base_pipe = list(x=var1,y=var2) |> \(a) a$x*a$y,
base_lambda = mapply(\(x,y) x*y, var1,var2)
)
bm5
autoplot(bm5)
ggplot2::autoplot(bm5)
bm5 <- bench::mark(
standard = {
res <- vector("numeric",length(var1))
for(i in 1:length(var1)){
res[[i]] <- var1[[i]]*var2[[i]]
}
res
},
purrr = map2_dbl(var1,var2,~.x*.y),
magrittr = list(x=var1,y=var2) %>% {.$x*.$y},
base_pipe = list(x=var1,y=var2) |> \(.) .$x*.$y,
base_lambda = mapply(\(x,y) x*y, var1,var2)
)
build_site()
blogdown::build_site()
bm4 <- bench::mark(
standard = {
res <- vector("list",10)
for(i in 1:10) res[[i]] <- mean(1:i)
res
},
purrr = map(1:10,~mean(1:.)),
base = lapply(1:10,\(i) mean(1:i)),
base_map = map(1:10,\(i) mean(1:i))
)
bm4 <- bench::mark(
standard = {
res <- vector("list",10)
for(i in 1:10) res[[i]] <- mean(1:i)
res
},
purrr = map(1:10,~mean(1:.)),
base = lapply(1:10,\(i) mean(1:i)),
base_map = map(1:10,\(i) mean(1:i))
)
ggplot2::autoplot(bm4)
lapply
map
\()
cat("hello")
blogdown::build_site()
blogdown::build_site()
blogdown::build_site
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown:::preview_site()
blogdown::build_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
